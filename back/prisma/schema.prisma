// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique @db.VarChar(150)
  password String    @db.VarChar(72)
  email    String
  styles   Style[]
  sizings  Sizing[]
  fittings Fitting[]
  aboutmes Aboutme[]

  @@map("users")
}

model Style {
  id            Int            @id @default(autoincrement())
  style_name    String
  User          User?          @relation(fields: [userId], references: [id])
  userId        Int?
  target_groups Target_group[]

  @@map("styles")
}

model Target_group {
  id             Int             @id @default(autoincrement())
  gender         String
  age            String
  Taste          String
  style          Style?          @relation(fields: [styleId], references: [id])
  styleId        Int?
  dressing_steps Dressing_step[]

  @@map("target_groups")
}

model Dressing_step {
  id                 Int                 @id @default(autoincrement())
  chooseclothes      String
  makeup             String
  hairstyle          String
  Target_group       Target_group?       @relation(fields: [target_groupId], references: [id])
  target_groupId     Int?
  examples_obtaineds Examples_obtained[]

  @@map("dressing_steps")
}

model Examples_obtained {
  id                 Int                 @id @default(autoincrement())
  sample_received    Int
  refer_id           String
  Dressing_steps     Dressing_step?      @relation(fields: [dressing_stepsId], references: [id])
  dressing_stepsId   Int?
  savethe_images     Savethe_image[]
  additional_advices Additional_advice[]
  citingthesources   Citingthesource[]

  @@map("examples_obtaineds")
}

model Savethe_image {
  id                  Int                @id @default(autoincrement())
  url                 String
  sharephotos         String
  device              String
  examples_obtaineds  Examples_obtained? @relation(fields: [examples_obtainedId], references: [id])
  examples_obtainedId Int?
  comments            Comment[]

  @@map("savethe_images")
}

model Additional_advice {
  id                  Int                @id @default(autoincrement())
  hair_color          String
  clothes             String
  Examples_obtained   Examples_obtained? @relation(fields: [examples_obtainedId], references: [id])
  examples_obtainedId Int?

  @@map("additional_advices")
}

model Citingthesource {
  id                  Int                @id @default(autoincrement())
  source              String
  Examples_obtained   Examples_obtained? @relation(fields: [examples_obtainedId], references: [id])
  examples_obtainedId Int?

  @@map("citingthesources")
}

model Comment {
  id              Int            @id @default(autoincrement())
  coment          Int
  contact         String
  givearating     Int
  Savethe_image   Savethe_image? @relation(fields: [savethe_imageId], references: [id])
  savethe_imageId Int?

  @@map("comments")
}

model Sizing {
  id         Int      @id @default(autoincrement())
  height     String
  weight     String
  proportion String
  skin_color String
  date       DateTime
  status     Status   @default(PENDING)
  User       User?    @relation(fields: [userId], references: [id])
  userId     Int?

  @@map("sizings")
}

model Fitting {
  id             Int    @id @default(autoincrement())
  fit            String
  bodice         String
  lower_clothing String
  User           User?  @relation(fields: [userId], references: [id])
  userId         Int?

  @@map("fittings")
}

model Aboutme {
  id         Int      @id @default(autoincrement())
  birthday   DateTime
  age        String
  occupation String
  User       User?    @relation(fields: [userId], references: [id])
  userId     Int?

  @@map("aboutmes")
}

enum Status {
  PENDING
  DOING
  DONE
}
